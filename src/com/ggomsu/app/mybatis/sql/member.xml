<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 작성자 : 박성민, 손하늘 -->

<mapper namespace="Member">
	<!-- 회원가입 -->
	<select id="checkEmail" parameterType="string" resultType="_int">
		SELECT COUNT(email)
		FROM members
		WHERE email = #{email}
	</select>
	<select id="checkNickname" parameterType="string" resultType="_int">
		SELECT COUNT(nickname)
		FROM members
		WHERE nickname = #{nickname}
	</select>
	<select id="checkContact" parameterType="string" resultType="_int">
		SELECT COUNT(contact)
		FROM members
		WHERE contact = #{contact}
	</select>
	<insert id="signUp" parameterType="member">
		INSERT INTO members
		(email, password, salt, signAt, passwordAlertAt, nickname, profileImageUrl, name,
		birthDate, sex, telecomValue, contact, zipcode, address, addressDetail, agreedTermAt, agreedMarketingAt)
		VALUES
		(#{email}, #{password}, #{salt}, NOW(), NOW(),
		#{nickname}, #{profileImageUrl}, #{name}, #{birthDate}, #{sex}, #{telecomValue}, #{contact}, 
		#{zipcode}, #{address}, #{addressDetail}, NOW(), NOW())
	</insert>
	
	<!-- 로그인 : 비밀번호, 솔트, 유저상태, 휴면계정 여부 등등을 모두 비교해야 함 -->
	<select id="getMemberInfo" parameterType="string" resultType="member">
		SELECT	*
		FROM	members
		WHERE	email = #{email}
	</select>
	
	<!-- 회원탈퇴 : 탈퇴 후 바로 사용자DB 정보를 삭제하는 것 이 아니라 일정기간 이후 삭제 하기 때문 사용자상태 정보만 변경 하여 회원 탈퇴 구분 -->
	<update id="withdrawal" parameterType="member">
		UPDATE members 
		SET statusValue = "DEL"
		WHERE 
		email = #{email}
	</update>
	
	<!-- 차단유저 -->
	<select id="blockView" parameterType="string" resultType="string">
		SELECT blockedMember
		FROM memberBlock
		WHERE nickname = #{nickname}
	</select>
	
	<insert id="blockOk" parameterType="member">
		INSERT INTO memberBlock
		(nickname, blockedMember)
		VALUES
		(#{nickname}, #{blockedMember})
	</insert>
	
	<!-- 신고횟수 증가  -->
	<update id="updateAbuseCount" parameterType="string" statementType="CALLABLE">
		{ CALL
			updateBlockMember(
				#{nickname}
			)
		}
	</update>
	
	<select id="getAllMember" resultType="member">
		SELECT nickname, name, statusValue, abuseCount 
		FROM members
		ORDER BY statusValue
	</select>	
	
</mapper>
