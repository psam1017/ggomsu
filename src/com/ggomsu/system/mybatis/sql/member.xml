<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 작성자 : 박성민, 손하늘 -->
<mapper namespace="Member">
	<!-- 회원가입 -->
	<select id="checkEmail" parameterType="string" resultType="_int">
		SELECT COUNT(email)
		FROM members
		WHERE email = #{email}
	</select>
	<select id="checkNickname" parameterType="string" resultType="_int">
		SELECT COUNT(nickname)
		FROM members
		WHERE nickname = #{nickname}
	</select>
	<select id="checkContact" parameterType="string" resultType="_int">
		SELECT COUNT(contact)
		FROM members
		WHERE contact = #{contact}
	</select>
	<insert id="signUp" parameterType="member">
		INSERT INTO members
		(email, password, salt, passwordAlertAt, 
		nickname, name, birthDate, sex, telecomValue, contact, 
		zipcode, address, addressDetail, agreedMarketingAt)
		VALUES
		(#{email}, #{password}, #{salt}, DATE_ADD(NOW(), INTERVAL 3 MONTH),
		#{nickname}, #{name}, #{birthDate}, #{sex}, #{telecomValue}, #{contact}, 
		#{zipcode}, #{address}, #{addressDetail}, 
		<choose>
			<when test='"agree".equals(agreedMarketingAt)'>
				NOW()
			</when>
			<otherwise>
				NULL
			</otherwise>
		</choose>
		)
	</insert>
	<insert id="insertAuthFailedEmail" parameterType="string">
		INSERT INTO members (email, nickname, statusValue)
		VALUES (#{email}, 'SUS')
	</insert>

	<!-- 로그인 : 비밀번호, 솔트, 유저상태, 휴면계정 여부 등등을 모두 비교해야 함 -->
	<select id="getMemberInfo" parameterType="string" resultType="member">
		SELECT	*
		FROM	members
		WHERE	email = #{email}
	</select>
	<update id="updateSignAt" parameterType="string"> 
	  UPDATE members 
	  SET signAt = NOW() 
	  WHERE email = #{email} 
	</update>
	<select id="checkPasswordRenew" statementType="CALLABLE" parameterType="string" resultType="_int">
		CALL checkPasswordRenew(#{email})
	</select>
	<update id="updatePasswordAlertAtByEmail" parameterType="string">
		UPDATE members
		SET passwordAlertAt = NOW() + INTERVAL 3 MONTH
		WHERE email = #{email}
	</update>
	<select id="checkTermExpired" statementType="CALLABLE" parameterType="string" resultType="_int">
		CALL checkTermExpired(#{email})
	</select>
	<update id="updateAgreedTermAtByEmail" parameterType="string">
		UPDATE members
		SET agreedTermAt = NOW()
		WHERE email = #{email}
	</update>
	
	<!-- help : 로그인 불가능 상태 관련 -->
	<update id="restoreInvalid" parameterType="map"> 
	  UPDATE members 
	  SET statusValue = #{originalStatusValue}
	  WHERE email = #{email}
	</update>
	<select id="findLostEmail" parameterType="member" resultType="string">
		SELECT email
		FROM members
		WHERE name = #{name} 
		AND sex = #{sex} 
		AND birthDate = #{birthDate} 
		AND telecomValue = #{telecomValue}
		AND contact = #{contact}
		LIMIT 1;
	</select>
	
	<!-- 마이페이지 공통 : 프로필,  개인정보, 비밀번호, 설정 -->
	<update id="updateProfile" parameterType="member">
		UPDATE members
		SET profileImageUrl = #{profileImageUrl}, nickname = #{nickname}
		WHERE email = #{email}
	</update>
	<update id="updatePersonal" parameterType="member">
		UPDATE members 
		SET 
		telecomValue = #{telecomValue},
		contact = #{contact},
		zipcode = #{zipcode},
		address = #{address},
		addressDetail = #{addressDetail}
		WHERE 
		email = #{email}
	</update>
	<update id="updatePassword" parameterType="member">
		UPDATE members 
		SET 
		password = #{password},
		salt = #{salt}
		WHERE email = #{email}
	</update>
	<update id="updateConfig" parameterType="member"> 
	 	UPDATE members 
	  	SET alarmFlag = ${alarmFlag}, darkModeFlag = ${darkModeFlag}
	  	WHERE email = #{email}
	</update>
	
	<!-- 마이페이지 회원 : 약관, 블라인드, 탈퇴 -->
	<update id="updateTerm" parameterType="member">
		UPDATE members
		<choose>
			<when test='"renew".equals(agreedTermAt) and "agree".equals(agreedMarketingAt)'>
			SET agreedTermAt = NOW(), agreedMarketingAt = NOW()
			</when>
			<when test='"renew".equals(agreedTermAt)'>
			SET agreedTermAt = NOW(), agreedMarketingAt = NULL
			</when>
			<when test='"agree".equals(agreedMarketingAt)'>
			SET agreedMarketingAt = NOW()
			</when>
			<otherwise>
			SET agreedMarketingAt = NULL
			</otherwise>
		</choose>
		WHERE email = #{email}
	</update>
	<select id="getBlindList" parameterType="string" resultType="string">
		SELECT blindMember
		FROM memberBlind
		WHERE nickname = #{nickname}
	</select>
	<insert id="insertBlindMember" parameterType="map">
		INSERT INTO memberBlind (nickname, blindMember)
		VALUES (#{nickname}, #{blindMember})
	</insert>
	<delete id="deleteBlindMember" parameterType="map">
		DELETE FROM memberBlind
		WHERE nickname = #{nickname} 
		AND blindMember = #{editableMember}
	</delete>
	<update id="updateDarkMode" parameterType="map">
		UPDATE members
		SET darkModeFlag = ${darkModeFlag}
		WHERE email = #{email}
	</update>
	<update id="withdraw" parameterType="string">
		UPDATE members 
		SET statusValue = 'DEL'
		WHERE email = #{email}
	</update>
	
	<!-- 이성호 : admin에서 사용  -->
	<update id="increaseAbuseCount" parameterType="string" statementType="CALLABLE">
		CALL increaseAbuseCount(#{nickname})
	</update>
	<select id="getAllMember" resultType="member">
		SELECT * FROM members
	</select>
	
	<!-- 박성민 : sns 회원가입, 로그인 처리 -->
	<select id="checkSnsByKey" parameterType="map" resultType="_int">
		SELECT COUNT(email)
		FROM memberSns
		WHERE (email, snsKey) = (#{email}, #{snsKey})
	</select>
	<select id="checkSnsByType" parameterType="map" resultType="_int">
		SELECT COUNT(email)
		FROM memberSns
		WHERE (email, `type`) = (#{email}, #{type})
	</select>
	<delete id="deleteSnsKeyByType" parameterType="map">
		DELETE FROM memberSns
		WHERE (email, `type`) = (#{email}, #{type})
	</delete>
	<insert id="signUpWithSns" parameterType="map">
		INSERT INTO members(email, nickname, statusValue, agreedMarketingAt)
		<choose>
			<when test='"agree".equals(agreedMarketingAt)'>
			VALUES(#{email}, #{nickname}, 'SNS', NOW())
			</when>
			<otherwise>
			VALUES(#{email}, #{nickname}, 'SNS', NULL)
			</otherwise>
		</choose>
	</insert>
	<insert id="insertSnsKey" parameterType="map">
		INSERT INTO memberSns
		VALUES(#{email}, #{snsKey}, #{type})
	</insert>
	<insert id="integrateAccount" parameterType="member">
		UPDATE members
		SET password = #{password}, salt = #{salt}, name = #{name}, birthDate = #{birthDate}, sex = #{sex}, telecomValue = #{telecomValue}, contact = #{contact}, zipcode = #{zipcode}, address = #{address}, statusValue = 'MEM'
		WHERE email = #{email}
	</insert>
</mapper>
